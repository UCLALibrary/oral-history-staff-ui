# Values for oh-staff.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: uclalibrary/oral-history-staff-ui
  tag: v1.1.1
  pullPolicy: Always

nameOverride: ""

fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: "true"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    cert-manager.io/cluster-issuer: sectigo-acme-clusterissuer
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: "oh-staff.library.ucla.edu"
      paths:
        - "/"
  tls:
    - secretName: oh-staff-tls
      hosts:
        - oh-staff.library.ucla.edu

django:
  env:
    run_env: "prod"
    debug: "false"
    # DEBUG, INFO, WARNING, ERROR, CRITICAL
    log_level: "INFO"
    # Comma-separated list of Public and private host names (for internal OAI harvesting)
    allowed_hosts: oh-staff.library.ucla.edu,oral-history-staff-ui-oh-staff.oh-staffprod.svc.cluster.local
    csrf_trusted_origins:
      - https://oh-staff.library.ucla.edu
    ark_minter: "http://noid.library.ucla.edu/noidu_zz8+?mint+1"
    # Now pointing to production db
    db_backend: "django.db.backends.postgresql_psycopg2"
    db_host: "p-d-postgres.library.ucla.edu"
    db_port: 5432
    db_name: "oral_history_staff"
    db_user: "oral_history_staff"
    # Specific directory used for source files
    oh_file_source: "/media/oh_source/upload"
    # Where Django looks for uploaded files
    oh_media_root: "/media"
    # Relative paths within oh_media_root, used by Django
    oh_masters: "oh_masters"
    oh_static: "oh_static"
    oh_wowza: "oh_wowza"
    # URL prefix for non-audio submasters (mainly jpg/pdf/xml)
    # handled by UCLA's main static file server.
    oh_static_url_prefix: "https://static.library.ucla.edu/oralhistory/"
    # URL prefix for audio submasters
    oh_wowza_url_prefix: "https://wowza.library.ucla.edu/dlp/definst/mp3:oralhistory/"
    # URL for linking to public interface.
    oh_public_site: "https://oralhistory.library.ucla.edu"

  externalSecrets:
    enabled: "true"
    annotations:
      argocd.argoproj.io/sync-wave: "-3"
    env:
      # Application database used by django
      db_password: "/systems/prodrke01/oh-staff/db_password"
      django_secret_key: "/systems/prodrke01/oh-staff/django_secret_key"

# PersistentVolume and PersistentVolumeClaim parameters
persistentVolumes:
  ohsource:
    storage: "5.5Ti"
    access: "ReadOnlyMany"
    server: "lib-partners.in.library.ucla.edu"
    path: "/OralHistory"
  ohmasters:
    storage: "7Ti"
    access: "ReadWriteMany"
    server: "masters.in.library.ucla.edu"
    path: "/nfs_mount/oralhistory"
  ohwowza:
    storage: "5Ti"
    access: "ReadWriteMany"
    server: "wowza.in.library.ucla.edu"
    path: "/dlp/oralhistory"
  ohstatic:
    storage: "300Gi"
    access: "ReadWriteMany"
    server: "dlp.in.library.ucla.edu"
    path: "/oralhistory"

persistentVolumesAnnotations:
  argocd.argoproj.io/sync-wave: "-2"

persistentVolumeClaimsAnnotations:
  argocd.argoproj.io/sync-wave: "-1"

# Volume mount specification for the container
volumeMounts:
  - name: "ohsource"
    mountPath: "/media/oh_source"
  - name: "ohmasters"
    mountPath: "/media/oh_masters"
  - name: "ohwowza"
    mountPath: "/media/oh_wowza"
  - name: "ohstatic"
    mountPath: "/media/oh_static"

resources:
  limits:
    cpu: 1000m
    memory: 4Gi
  requests:
    cpu: 250m
    memory: 100Mi

nodeSelector: {}

tolerations: []

affinity: {}
